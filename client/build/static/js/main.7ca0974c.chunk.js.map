{"version":3,"sources":["context/ContextProvider.tsx","pages/Login/components.tsx","pages/Login/ColorPicker.tsx","components/AddNickname.tsx","pages/Login/index.tsx","components/Flex.tsx","pages/Room/ReactionSummary/index.tsx","pages/Room/Presentation/index.tsx","pages/Room/ReactionBar/index.tsx","pages/Room/OnlineList/index.tsx","pages/Room/Sound/index.tsx","pages/Room/Main/index.tsx","pages/Room/Sidebar/Leaderboards.tsx","pages/Room/Sidebar/index.tsx","pages/Room/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DEFAULT_COLOR","r","g","b","a","DEFAULT_ROOM_STATE","currentPresentation","presentations","reactions","users","resultsVisible","defaultState","socket","undefined","startConnection","nickname","setNickname","setUserColor","userColor","roomState","getIsAdmin","AppContext","createContext","AppContextProvider","children","useState","setSocket","setRoomState","useEffect","on","data","console","log","name","index","Provider","value","roomId","newSocket","io","query","room","user","color","JSON","stringify","admin","find","isAdmin","ColorSwatch","styled","div","ColorPickPopover","ColorPickCover","ColorPreview","attrs","props","style","backgroundColor","ColorPicker","showColorPicker","setShowColorPicker","position","onClick","onChange","rgb","Title","Typography","AddNickname","useContext","Group","level","margin","padding","Row","placeholder","event","nick","target","notification","warning","message","description","Text","Wrapper","Prompt","LoginPage","LoginPrompt","history","useHistory","roomName","setRoomName","fontWeight","type","length","success","toUpperCase","standarizedRoomName","replace","push","missing","join","Flex","row","column","justify","align","newStyle","flexDirection","justifyContent","alignItems","grow","ReactionSummary","mappedReactions","Object","entries","map","reaction","id","number","currentReaction","emoji","Presentation","winner","presentationTitle","ReactionBar","reactionType","emit","size","iconComponent","fontSize","marginBottom","toRGB","OnlineUser","OnlineList","filter","Sound","soundLevel","clap","laugh","clap1","setClap1","clap2","setClap2","clap3","setClap3","clap4","setClap4","laugh1","setLaugh1","laugh2","setLaugh2","laugh3","setLaugh3","laugh4","setLaugh4","clapCount","laughCount","numOnlineUsers","clapMeter","Math","min","laughMeter","setTimeout","src","autoPlay","Main","roomid","useParams","presentationList","presentation","points","values","reduce","sum","point","sort","gravity","run","numberOfPieces","Place","border","PresentationList","backround","isActive","background","Leaderboards","isWinner","title","placement","presentationIndex","overflow","substring","Sidebar","setPresentationTitle","borderRadius","onConfirm","show","onCancel","okText","cancelText","danger","Room","isVisible","setIsVisible","percentage","primaryMinSize","secondaryInitialSize","visible","cancelButtonProps","visibility","onOk","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"obAKaA,EAAgB,CAC3BC,EAAG,IACHC,EAAG,EACHC,EAAG,EACHC,EAAG,KAGCC,EAAqB,CACzBC,qBAAsB,EACtBC,cAAe,GACfC,UAAW,GACXC,MAAO,GACPC,gBAAgB,GAIZC,EAA6B,CACjCC,YAAQC,EACRC,gBAAiB,aACjBC,SAAU,GACVC,YAAa,aACbC,aAAc,aACdC,UAAWlB,EACXmB,UAAWd,EACXe,WAAY,kBAAM,IAGPC,EAAaC,wBAA4BX,GA+DvCY,EA7DY,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAA+C,EAC/CC,qBAD+C,mBACpEb,EADoE,KAC5Dc,EAD4D,OAE3CD,mBAAS,IAFkC,mBAEpEV,EAFoE,KAE1DC,EAF0D,OAGzCS,mBAAmBzB,GAHsB,mBAGpEkB,EAHoE,KAGzDD,EAHyD,OAIzCQ,mBAAoBpB,GAJqB,mBAIpEc,EAJoE,KAIzDQ,EAJyD,KAY3EC,qBAAU,WACF,OAANhB,QAAM,IAANA,KAAQiB,GAAG,eAAe,SAACC,GACzBH,EAAaG,GACbC,QAAQC,IAAI,OAAQF,MAGhB,OAANlB,QAAM,IAANA,KAAQiB,GAAG,mBAAmB,SAACI,GAC7BN,EAAa,2BACRR,GADO,IAEVZ,cAAc,GAAD,mBACRY,EAAUZ,eADF,CAEX,CACE0B,OACAzB,UAAW,YAMb,OAANI,QAAM,IAANA,KAAQiB,GAAG,yBAAyB,SAACK,GACnCP,EAAa,2BACRR,GADO,IAEVb,oBAAqB4B,QAInB,OAANtB,QAAM,IAANA,KAAQiB,GAAG,eAAe,WACxBF,EAAa,2BACRR,GADO,IAEVT,gBAAgB,UAInB,CAACE,IASJ,OACE,cAACS,EAAWc,SAAZ,CAAqBC,MAAO,CAAExB,SAAQE,gBAjDhB,SAACuB,GACvB,IACMC,EAAYC,aAD8D,GACrD,CAAEC,MAAO,CAAEC,KAAMJ,EAAQK,KAAM3B,EAAU4B,MAAOC,KAAKC,UAAU3B,MAC1FQ,EAAUY,IA8C6CvB,WAAUC,cAAaE,YAAWD,eAAcE,YAAWC,WARjG,WACjB,IACI0B,IADmB,OAAT3B,QAAS,IAATA,OAAA,EAAAA,EAAWV,QAAS,IAChBsC,MAAK,SAAAL,GAAI,OAAIA,EAAKM,WAEpC,QAAOF,GAAQA,EAAMJ,OAAS3B,IAI9B,SACGS,K,ioBCvFA,IAAMyB,EAAcC,IAAOC,IAAV,KASXC,EAAmBF,IAAOC,IAAV,KAMhBE,EAAiBH,IAAOC,IAAV,KAQdG,EAAeJ,IAAOC,IAAII,OAAM,SAACC,GAAoC,IAAD,EACxDA,EAAMtC,UAArBjB,EADuE,EACvEA,EAAGC,EADoE,EACpEA,EAAGC,EADiE,EACjEA,EAAGC,EAD8D,EAC9DA,EACjB,MAAO,CACLqD,MAAO,CACLC,gBAAgB,QAAD,OAAUzD,EAAV,YAAeC,EAAf,YAAoBC,EAApB,YAAyBC,EAAzB,SAJO8C,CAAH,KCjBV,SAASS,EAAYH,GAAe,IACzCtC,EAA4BsC,EAA5BtC,UAAWD,EAAiBuC,EAAjBvC,aAD6B,EAEAQ,oBAAS,GAFT,mBAExCmC,EAFwC,KAEvBC,EAFuB,KAMhD,OACE,sBAAKJ,MAAO,CAAEK,SAAU,YAAxB,UACE,cAACb,EAAD,CAAac,QALU,kBAAMF,GAAoBD,IAKjD,SACE,cAACN,EAAD,CAAcpC,UAAYA,MAE1B0C,EACA,eAACR,EAAD,WACE,cAACC,EAAD,CAAgBU,QAAS,kBAAMF,GAAmB,MAClD,cAAC,IAAD,CAAclB,MAAOzB,EAAW8C,SAVd,SAACrB,GAAD,OAA8B1B,EAAa0B,EAAMsB,WAYrE,Q,qUCnBAC,EAAUC,IAAVD,MAkCOE,EAhCK,WAAO,IAAD,EAEmCC,qBAAWhD,GAA9DN,EAFgB,EAEhBA,SAAUC,EAFM,EAENA,YAAaE,EAFP,EAEOA,UAAWD,EAFlB,EAEkBA,aAY1C,OACE,eAACqD,EAAD,WACE,cAACJ,EAAD,CAAOK,MAAO,EAAGd,MAAO,CAAEe,OAAQ,EAAGC,QAAS,GAA9C,4CACA,eAACC,EAAD,WACE,cAAC,IAAD,CACEC,YAAY,WACZvC,MAAOrB,EACPiD,SAjBa,SAACY,GACpB,IAAMC,EAAOD,EAAME,OAAO1C,MACrByC,EAKA7D,EAAY6D,GAJfE,IAAaC,QAAQ,CACnBC,QAAS,MACTC,YAAa,uCAaXzB,MAAO,CACLe,OAAQ,iBACR7B,MAAM,QAAD,OAAUzB,EAAUjB,EAApB,YAAyBiB,EAAUhB,EAAnC,YAAwCgB,EAAUf,EAAlD,YAAuDe,EAAUd,EAAjE,QAET,cAACuD,EAAD,CAAazC,UAAWA,EAAWD,aAAcA,WAQ5CqD,EAAQpB,IAAOC,IAAV,KAOLuB,EAAMxB,IAAOC,IAAV,K,wYC1CRe,EAAgBC,IAAhBD,MAAOiB,EAAShB,IAATgB,KAETC,EAAUlC,IAAOC,IAAV,KASPkC,EAASnC,IAAOC,IAAV,KAOG,SAASmC,IACpB,OAAO,cAACF,EAAD,UACH,cAACG,EAAD,MAIR,SAASA,IACL,IAAMC,EAAUC,cAER1E,EAAasD,qBAAWhD,GAAxBN,SAHW,EAIaU,mBAAS,IAJtB,mBAIZiE,EAJY,KAIFC,EAJE,KAiCnB,OAAO,eAACN,EAAD,WACH,cAAC,EAAD,CAAOd,MAAO,EAAGd,MAAO,CAAEmC,WAAY,KAAtC,0BACA,cAAC,EAAD,IACA,eAACtB,EAAD,WACI,cAAC,EAAD,CAAOC,MAAO,EAAGd,MAAO,CAAEe,OAAQ,EAAGC,QAAS,GAA9C,6BACA,cAACU,EAAD,CAAM1B,MAAO,CAAEe,OAAQ,EAAGC,QAAS,GAAnC,+BACA,cAAC,IAAD,CAAOE,YAAY,YAAYvC,MAAOsD,EAAU1B,SAhCnC,SAACY,GAClBe,EAAYf,EAAME,OAAO1C,QA+BmDqB,MAAO,CAAEe,OAAQ,cAE7F,cAACF,EAAD,UACI,cAAC,IAAD,CAAQuB,KAAK,UAAU9B,QA/BV,WACjB,IAAI,OAAChD,QAAD,IAACA,OAAD,EAACA,EAAU+E,UAAU,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAUI,QAS/B,CACDf,IAAagB,QAAQ,CACjBd,QAAS,OACTC,YAAY,8BAAD,OAAgCQ,EAASM,cAAzC,aAEf,IAAMC,EAAsBP,EAASQ,QAAQ,IAAK,IAElDV,EAAQW,KAAR,gBAAsBF,QAhBkB,CACxC,IAAMG,EAAU,IACZ,OAACrF,QAAD,IAACA,OAAD,EAACA,EAAU+E,SAAQM,EAAQD,KAAK,aAChC,OAACT,QAAD,IAACA,OAAD,EAACA,EAAUI,SAAQM,EAAQD,KAAK,aACpCpB,IAAaC,QAAQ,CACjBC,QAAS,mBACTC,YAAY,uBAAD,OAAyBkB,EAAQC,KAAK,SAAtC,+BAwBf,wB,2JC9DZ,IA0BeC,EA1BFpD,IAAOC,IAAII,OAAM,SAACC,GAAkB,IACvC+C,EAAuC/C,EAAvC+C,IAAKC,EAAkChD,EAAlCgD,OAAQC,EAA0BjD,EAA1BiD,QAASC,EAAiBlD,EAAjBkD,MAAOjD,EAAUD,EAAVC,MAC/BkD,EAAQ,eAAQlD,GAatB,OAZI8C,IACFI,EAASC,cAAgB,OAEvBJ,IACFG,EAASC,cAAgB,UAEvBH,IACFE,EAASE,eAAiB,UAExBH,IACFC,EAASG,WAAa,UAEjB,CACLrD,MAAOkD,KAhBEzD,CAAH,KAsBO,SAACM,GAAD,OAAYA,EAAMuD,KAAO,EAAI,W,gIC3B9C,IAAM3B,GAAUlC,IAAOC,IAAV,MAYE,SAAS6D,GAAgBxD,GAAe,IAAD,EAM5CyD,GALgB,UAAGC,OAAOC,QAAQ3D,EAAMhD,WACzC4G,KAAI,SAAAC,GAAQ,MAAK,CACdC,GAAID,EAAS,GACbE,OAAQF,EAAS,cAHH,QAIX,IAC8BD,KAAI,SAACI,GAA0B,IAAD,EAC7DC,EAAK,UAAGjH,EAAUuC,MAAK,SAAAsE,GAAQ,OAAIA,EAASC,KAAOE,EAAgBF,aAA9D,aAAG,EAAgEG,MAC9E,OACI,eAAC,EAAD,CAAMlB,KAAG,EAAC9C,MAAO,CAAEe,OAAQ,SAA3B,UAAsCiD,EAAtC,WAA8CD,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAiBD,aAGvE,OACI,cAAC,GAAD,UACMN,I,+VC3BN/C,GAAUC,IAAVD,MAEFkB,GAAUlC,IAAOC,IAAV,MAcE,SAASuE,GAAT,GAAuD,IAAD,IAA9BC,EAA8B,EAA9BA,OAC3BxG,EAAckD,qBAAWhD,GAAzBF,UACFyG,EAAiB,iBAAGzG,QAAH,IAAGA,GAAH,UAAGA,EAAWZ,cAAX,OAAyBY,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWb,4BAAvC,aAAG,EAA0D2B,YAA7D,QAChB,6BAEP,OAAKd,EAAUT,eAOX,eAAC,GAAD,WACA,eAAC,GAAD,CAAO6D,MAAO,EAAd,wBAA6BoD,EAA7B,uDACA,cAAC,GAAD,CAAOpD,MAAO,EAAd,yCARQ,eAAC,GAAD,WACJ,cAAC,GAAD,CAAOA,MAAO,EAAd,SAAkBqD,IAClB,cAAC,GAAD,CAAOrD,MAAO,EAAd,kD,cCpBG,SAASsD,KAAe,IAE3BjH,EAAWyD,qBAAWhD,GAAtBT,OAMFqG,EAAkBzG,EAAU4G,KAAI,SAACC,GACnC,OACI,qBAAK5D,MAAO,CAAEe,OAAQ,QAAUT,QAAS,kBANxB+D,EAM8CT,EAASC,GAL5EvF,QAAQC,IAAI,WACN,OAANpB,QAAM,IAANA,KAAQmH,KAAK,WAAY,CAAElC,KAAMiC,KAFb,IAACA,GAMjB,SAEI,cAAC,KAAD,CACIE,KAAM,IACNC,cAAe,kBAAM,oBAAIxE,MAAO,CAAEyE,SAAU,OAAQC,aAAc,QAA7C,SAAwDd,EAASI,gBAKtG,OACI,cAAC,EAAD,CAAMlB,KAAG,EAACE,SAAO,EAACC,OAAK,EAACjD,MAAO,CAAEgB,QAAS,QAA1C,SACKwC,I,iSCvBL/C,GAAUC,IAAVD,MAEFkE,GAAQ,SAAClH,GACX,MAAM,QAAN,OAAeA,EAAUjB,EAAzB,YAA8BiB,EAAUhB,EAAxC,YAA6CgB,EAAUf,EAAvD,YAA4De,EAAUd,EAAtE,MAEEiI,GAAanF,IAAOC,IAAV,MASE,gBAAGjC,EAAH,EAAGA,UAAH,OAAmBA,EAAUjB,EAAImI,GAAMlH,GAAakH,GAAMpI,MAG7D,SAASsI,KAAc,IAC1BnH,EAAckD,qBAAWhD,GAAzBF,UAYR,OACI,eAAC,EAAD,CAAMqF,QAAM,EAAZ,UACI,eAAC,EAAD,CAAMD,KAAG,EAACG,OAAK,EAACjD,MAAO,CAAEK,SAAU,SAAU+C,eAAgB,aAAcrC,OAAQ,SAAnF,UACI,cAAC,GAAD,CAAOD,MAAO,EAAGd,MAAO,CAAEe,OAAQ,GAAlC,qBAdS,OAAMrD,QAAN,IAAMA,OAAN,EAAMA,EAAWV,MACjC8H,QAAO,SAAC7F,GAAD,OAAeA,EAAKM,WAC3BoE,KAAI,SAAC1E,GAAD,OACD,eAAC2F,GAAD,CAA0BnH,UAAWwB,EAAKC,OAAS3C,EAAnD,cAAoE0C,EAAKA,OAAxDA,EAAK4E,UActB,eAAC,EAAD,CAAMf,KAAG,EAACG,OAAK,EAACjD,MAAO,CAAEK,SAAU,SAAU+C,eAAgB,aAAcrC,OAAQ,SAAnF,UACI,cAAC,GAAD,CAAOD,MAAO,EAAGd,MAAO,CAAEe,OAAQ,GAAlC,yBAbQ,OAAMrD,QAAN,IAAMA,OAAN,EAAMA,EAAWV,MAChC8H,QAAO,SAAC7F,GAAD,OAAgBA,EAAKM,WAC5BoE,KAAI,SAAC1E,GAAD,OACD,eAAC2F,GAAD,CAA0BnH,UAAWwB,EAAKC,OAAS3C,EAAnD,cAAoE0C,EAAKA,OAAxDA,EAAK4E,a,wBC5BnB,SAASkB,KAAS,IAAD,EACuDnE,qBAAWhD,GAAxFF,UADsB,IACTsH,kBADS,MACI,CAAEC,KAAM,EAAGC,MAAO,GADtB,EAC2BlI,EAD3B,EAC2BA,MAAOC,EADlC,EACkCA,eADlC,EAGJe,oBAAS,GAHL,mBAGvBmH,EAHuB,KAGhBC,EAHgB,OAIJpH,oBAAS,GAJL,mBAIvBqH,EAJuB,KAIhBC,EAJgB,OAKJtH,oBAAS,GALL,mBAKvBuH,EALuB,KAKhBC,EALgB,OAMJxH,oBAAS,GANL,mBAMvByH,EANuB,KAMhBC,EANgB,OAQF1H,oBAAS,GARP,mBAQvB2H,EARuB,KAQfC,EARe,OASF5H,oBAAS,GATP,mBASvB6H,EATuB,KASfC,EATe,OAUF9H,oBAAS,GAVP,mBAUvB+H,EAVuB,KAUfC,EAVe,OAWFhI,oBAAS,GAXP,mBAWvBiI,EAXuB,KAWfC,EAXe,KAiE9B,OApDA/H,qBAAU,WAAO,IACDgI,EAAiCnB,EAAvCC,KAAwBmB,EAAepB,EAAtBE,MACnBmB,EAAiBrJ,EAAMqF,OAEvBiE,EAAYC,KAAKC,IAAI,EAAGL,GAnBf,EAmByCE,IAClDI,EAAaF,KAAKC,IAAI,EAAGJ,GApBhB,EAoB2CC,IAEtDC,EAAY,IAAMnB,GACpBC,GAAS,GACTsB,YAAW,WACTtB,GAAS,KACR,MACMkB,GAAa,MAASjB,GAC/BC,GAAS,GACToB,YAAW,WACTpB,GAAS,KACR,MACMgB,GAAa,KAAQf,GAC9BC,GAAS,GACTkB,YAAW,WACTlB,GAAS,KACR,MACoB,MAAdc,GAAuBb,IAChCC,GAAS,GACTgB,YAAW,WACThB,GAAS,KACR,MAGDe,EAAa,IAAMd,GACrBC,GAAU,GACVc,YAAW,WACTd,GAAU,KACT,MACMa,GAAc,MAASZ,GAChCC,GAAU,GACVY,YAAW,WACTZ,GAAU,KACT,MACMW,GAAc,KAAQV,GAC/BC,GAAU,GACVU,YAAW,WACTV,GAAU,KACT,OACqB,MAAfS,GAAwBR,IACjCC,GAAU,GACVQ,YAAW,WACTR,GAAU,KACT,QAEJ,CAACf,EAAOE,EAAOE,EAAOE,EAAOE,EAAQE,EAAQE,EAAQE,EAAQjB,EAAYhI,EAAMqF,SAGhF,gCACG8C,GAAS,cAAC,KAAD,CAAkBwB,IAAI,mBAAmBC,UAAQ,IAC1DvB,GAAS,cAAC,KAAD,CAAkBsB,IAAI,mBAAmBC,UAAQ,IAC1DrB,GAAS,cAAC,KAAD,CAAkBoB,IAAI,mBAAmBC,UAAQ,KACzD3J,GACGwI,IAAU,cAAC,KAAD,CAAkBkB,IAAI,mBAAmBC,UAAQ,IAC/DjB,GAAU,cAAC,KAAD,CAAkBgB,IAAI,gBAAgBC,UAAQ,IACxDf,GAAU,cAAC,KAAD,CAAkBc,IAAI,gBAAgBC,UAAQ,IACxDb,GAAU,cAAC,KAAD,CAAkBY,IAAI,gBAAgBC,UAAQ,IACxDX,GAAU,cAAC,KAAD,CAAkBU,IAAI,YAAYC,UAAQ,IACpD3J,GAAkB,cAAC,KAAD,CAAkB0J,IAAI,aAAaC,UAAQ,O,+LCrE5DnG,GAAgBC,IAAhBD,MAAOiB,GAAShB,IAATgB,KAETC,GAAUlC,IAAOC,IAAV,MAOE,SAASmH,KAAQ,IAAD,UACnBC,EAAWC,cAAXD,OACApJ,EAAckD,qBAAWhD,GAAzBF,UACFb,EAAmB,OAAGa,QAAH,IAAGA,OAAH,EAAGA,EAAWZ,cAAX,iBAAyBY,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWb,2BAApC,QAA2D,GACjFE,EAAS,iBAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAqBE,iBAAxB,QAAqC,GAE9CiK,EAAgB,iBAAGtJ,QAAH,IAAGA,OAAH,EAAGA,EAAWZ,cAC/B6G,KAAI,SAACsD,GAAuB,IAAD,IAElBC,EAAM,WADG,UAAGzD,OAAO0D,OAAOF,EAAalK,kBAA9B,QAA4C,IAClCqK,QAAO,SAACC,EAAaC,GAAd,OAA6BD,EAAMC,IAAO,UAA9D,QAAoE,EAChF,OAAO,2BACAL,GADP,IAEIC,cAGPK,MAAK,SAAC5K,EAAQD,GAAT,OAAoBA,EAAEwK,OAASvK,EAAEuK,iBATrB,QASgC,GAEtD,OACI,eAAC,GAAD,YACc,OAATxJ,QAAS,IAATA,OAAA,EAAAA,EAAWT,iBAAkB,cAAC,KAAD,CAC1BuK,QAAS,IACTC,OAAM,OAAC/J,QAAD,IAACA,OAAD,EAACA,EAAWT,gBAClByK,eAAgB,MAEpB,cAAC,GAAD,uBACA,eAAC,EAAD,CAAM5E,KAAG,EAAC9C,MAAO,CAAEoD,eAAgB,iBAAnC,UACI,cAAC,GAAD,CAAOtC,MAAO,EAAd,SAAkBgG,KACR,OAATpJ,QAAS,IAATA,OAAA,EAAAA,EAAWT,gBACR,uDAAgB+J,EAAiB,UAAjC,aAAgB,EAAqBxI,KAArC,2CAEA,cAAC+E,GAAD,CAAiBxG,UAAWA,OAEpC,cAACkH,GAAD,CAAcC,OAAQ8C,EAAiB,GAAjB,UAAsBA,EAAiB,UAAvC,aAAsB,EAAqBxI,KAAO,YACxE,cAAC4F,GAAD,IACA,cAACS,GAAD,IACA,cAACE,GAAD,O,m1BClDJtE,GAAUC,IAAVD,MAEFkH,GAAQlI,IAAOC,IAAII,OAAM,YAAuC,IAC5DE,EAAa,GAInB,OALiE,EAAnCkE,SAG1BlE,EAAM4H,OAAS,qBAEZ,CAAE5H,WALCP,CAAH,MAuBLoI,GAAmBpI,IAAOC,IAAV,MAMhBuE,GAAexE,IAAOC,IAAII,OAAM,YAA2C,IACvEE,EAAa,CAAE8H,UAAW,eAEhC,OAH4E,EAAvCC,WAEvB/H,EAAMgI,WAAa,WAC1B,CAAEhI,WAHQP,CAAH,MAgBH,SAASwI,KAA6B,IAAD,QAClBrH,qBAAWhD,GAAjCF,EADwC,EACxCA,UAAWP,EAD6B,EAC7BA,OACbN,EAAmB,iBAAGa,QAAH,IAAGA,OAAH,EAAGA,EAAWb,2BAAd,QAAqC,EAExDI,EAAc,OAAGS,QAAH,IAAGA,OAAH,EAAGA,EAAWT,eAC5B+J,EAAmB/J,EAAc,iBACjCS,QADiC,IACjCA,OADiC,EACjCA,EAAWZ,cACR6G,KAAI,SAACsD,GAAuB,IAAD,IAElBC,EAAM,WADG,UAAGzD,OAAO0D,OAAOF,EAAalK,kBAA9B,QAA4C,IAClCqK,QAAO,SAACC,EAAaC,GAAd,OAA6BD,EAAMC,IAAO,UAA9D,QAAoE,EAChF,OAAO,2BACAL,GADP,IAEIC,cAGPK,MAAK,SAAC5K,EAAQD,GAAT,OAAoBA,EAAEwK,OAASvK,EAAEuK,iBAVR,QAUmB,GAVnB,iBAWjCxJ,QAXiC,IAWjCA,OAXiC,EAWjCA,EAAWZ,qBAXsB,QAWL,GAQ5BA,EAAgBkK,EAAiBrD,KAAI,SAACsD,EAAmBxI,GAAmB,IAAD,MACvEyJ,EAAqB,IAAVzJ,EACX1B,EAAS,UAAGkK,EAAalK,iBAAhB,QAA6B,GAC5C,OACI,cAAC,KAAD,CAASoL,MAAOlB,EAAazI,KAAM4J,UAAU,OAA7C,SACI,eAAC,GAAD,CAAcL,SAAUtJ,IAAU5B,EAAqByD,QAAS,kBAX/C+H,EAWyE5J,OATxF,OAANtB,QAAM,IAANA,KAAQmH,KAAK,wBAAyB,CAAE+D,uBAFpB,IAACA,GAWjB,UACI,cAACV,GAAD,CAAOzD,OAAQjH,GAAkBiL,EAAjC,SAA4CjL,GAAkBiL,EAAW,eAAOzJ,EAAQ,IACxF,eAAC,EAAD,CAAMsE,QAAM,EAAZ,UACI,cAAC,GAAD,CAAOjC,MAAO,EAAGd,MAAO,CAAEsI,SAAU,UAApC,UACK,UAAArB,EAAazI,YAAb,eAAmB6D,QAAS,IAAK,UAAA4E,EAAazI,YAAb,eAAmB+J,UAAU,EAAE,KAAM,MAAQtB,EAAazI,OAE/FvB,GAAkB,cAACsG,GAAD,CAAiBxG,UAAWA,eAMnE,OAAO,cAAC8K,GAAD,UAAmB/K,I,gRCxFtB2D,GAAUC,IAAVD,MAEFkB,GAAUlC,IAAOC,IAAV,MAWE,SAAS8I,KAAW,IAAD,EACY5H,qBAAWhD,GAA7CT,EADsB,EACtBA,OAAQO,EADc,EACdA,UAAWC,EADG,EACHA,WACrBV,EAAc,OAAGS,QAAH,IAAGA,OAAH,EAAGA,EAAWT,eAC5BsC,EAAU5B,IAHc,EAIoBK,mBAAS,IAJ7B,mBAIvBmG,EAJuB,KAIJsE,EAJI,KAiB9B,OACI,eAAC,GAAD,WACMlJ,GACE,eAAC,EAAD,CAAMwD,QAAM,EAAC/C,MAAO,CAAE4H,OAAQ,oBAAqBc,aAAc,MAAO1H,QAAS,OAAjF,UACI,eAAC,EAAD,CAAM+B,QAAM,EAAZ,UACI,cAAC,GAAD,CAAOjC,MAAO,EAAd,yBACA,cAAC,GAAD,CAAOA,MAAO,EAAd,gCACA,cAAC,IAAD,CACInC,MAAOwF,EACP5D,SApBU,SAACY,GAAD,OAC9BsH,EAAqBtH,EAAME,OAAO1C,QAoBduC,YAAY,0BAEhB,cAAC,IAAD,CAAQkB,KAAK,UAAU9B,QArBd,WACnB,OAANnD,QAAM,IAANA,KAAQmH,KAAK,kBAAmB,CAAE9F,KAAM2F,IACxC7C,IAAagB,QAAQ,CAAEd,QAAS,OAAQC,YAAa,4BACrDgH,EAAqB,KAkBiDzI,MAAO,CAAEe,OAAQ,UAAvE,oBAEJ,eAAC,EAAD,CAAMgC,QAAM,EAAC/C,MAAO,CAAEe,OAAQ,UAA9B,UACI,cAAC,GAAD,CAAOD,MAAO,EAAd,iCACA,cAAC,KAAD,CACIqH,MAAK,8CAA0ClL,EAAiB,OAAS,OAApE,oBACL0L,UAtBI,WAClB,OAANxL,QAAM,IAANA,KAAQmH,KAAK,cAAe,CAAEsE,MAAO3L,KAsBjB4L,SAAU,aACVC,OAAO,SACPC,WAAW,UACXX,UAAU,OANd,SAQI,cAAC,IAAD,CAAQhG,KAAK,UAAU4G,QAAM,EAA7B,SAA+B/L,EAAiB,OAAS,iBAKzE,eAAC,EAAD,CAAM8F,QAAM,EAAC/C,MAAO,CAAEe,OAAQ,UAA9B,UACI,cAAC,GAAD,CAAOD,MAAO,EAAd,8BACA,cAACmH,GAAD,U,yICxDhB,IAAMtG,GAAUlC,IAAOC,IAAV,MAKE,SAASuJ,KAAQ,IAAD,EACWrI,qBAAWhD,GAAzCP,EADmB,EACnBA,gBAAiBC,EADE,EACFA,SACjBwJ,EAAWC,cAAXD,OAFmB,EAIO9I,oBAAkB,GAJzB,mBAIpBkL,EAJoB,KAITC,EAJS,KAe3B,OATAhL,qBAAU,WACF2I,GAAuB,KAAbxJ,IAAoB4L,GAC9B7L,EAAgByJ,GAEH,KAAbxJ,GACA6L,GAAa,KAElB,CAACrC,EAAQxJ,EAAU4L,IAGlB,eAAC,GAAD,WACI,eAAC,IAAD,CACIE,YAAU,EACVC,eAAgB,GAChBC,qBAAsB,GAH1B,UAKI,cAACzC,GAAD,IACA,cAAC2B,GAAD,OAEJ,cAAC,KAAD,CAAOe,QAASL,EAAWM,kBAAmB,CAAExJ,MAAO,CAAEyJ,WAAY,WACjEC,KAAM,kBAAMP,GAAa,IAD7B,SAGI,cAAC,EAAD,S,OCtCD,SAASQ,KAEtB,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAACZ,GAAD,aCfZ,IAYea,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,GAAD,MAEFe,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.7ca0974c.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { RGBColor } from 'react-color';\nimport { io } from 'socket.io-client';\nimport { ContextState, RoomState } from './types';\n\nexport const DEFAULT_COLOR = {\n  r: 255,\n  g: 0,\n  b: 0,\n  a: 100\n};\n\nconst DEFAULT_ROOM_STATE = {\n  currentPresentation: -1,\n  presentations: [],\n  reactions: {},\n  users: [],\n  resultsVisible: false\n};\n\n\nconst defaultState: ContextState = {\n  socket: undefined,\n  startConnection: () => undefined,\n  nickname: '',\n  setNickname: () => undefined,\n  setUserColor: () => undefined,\n  userColor: DEFAULT_COLOR,\n  roomState: DEFAULT_ROOM_STATE,\n  getIsAdmin: () => false,\n};\n\nexport const AppContext = createContext<ContextState>(defaultState);\n\nconst AppContextProvider = ({ children }: { children: React.ReactChild }) => {\n  const [socket, setSocket] = useState<ContextState['socket']>();\n  const [nickname, setNickname] = useState('');\n  const [userColor, setUserColor] = useState<RGBColor>(DEFAULT_COLOR);\n  const [roomState, setRoomState] = useState<RoomState>(DEFAULT_ROOM_STATE);\n\n  const startConnection = (roomId: string) => {\n    const host = process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : '';\n    const newSocket = io(host, { query: { room: roomId, user: nickname, color: JSON.stringify(userColor) } });\n    setSocket(newSocket)\n  }\n\n  useEffect(() => {\n    socket?.on('stateUpdate', (data: any) => {\n      setRoomState(data);\n      console.log(\"Data\", data)\n    });\n\n    socket?.on('addPresentation', (name: string) => {\n      setRoomState({\n        ...roomState,\n        presentations: [\n          ...roomState.presentations,\n          {\n            name,\n            reactions: {}\n          }\n        ]\n      })\n    })\n\n    socket?.on('setActivePresentation', (index: number) => {\n      setRoomState({\n        ...roomState,\n        currentPresentation: index\n      })\n    })\n\n    socket?.on('showResults', () => {\n      setRoomState({\n        ...roomState,\n        resultsVisible: true\n      })\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket]);\n\n  const getIsAdmin = () => {\n    const users = roomState?.users || [];\n    let admin = users.find(user => user.isAdmin);\n\n    return admin ? admin.user === nickname : false;\n  }\n\n  return (\n    <AppContext.Provider value={{ socket, startConnection, nickname, setNickname, userColor, setUserColor, roomState, getIsAdmin }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport default AppContextProvider;\n","import styled from 'styled-components';\nimport { RGBColor } from '../../types';\n\nexport const ColorSwatch = styled.div`\n  padding: 5px;\n  background: #fff;\n  border-radius: 1px;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n  display: inline-block;\n  cursor: pointer;\n`;\n\nexport const ColorPickPopover = styled.div`\n  position: absolute;\n  z-index: 2;\n  background-color: white;\n`;\n\nexport const ColorPickCover = styled.div`\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n`;\n\nexport const ColorPreview = styled.div.attrs((props: { userColor: RGBColor }) => {\n  const { r, g, b, a } = props.userColor;\n  return {\n    style: {\n      backgroundColor: `rgba(${r},${g},${b},${a})`\n    }\n  }\n})<{ userColor: RGBColor }>`\n  width: 36px;\n  height: 14px;\n  border-radius: 2px;\n`;","import React, { useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { ColorSwatch, ColorPreview, ColorPickPopover, ColorPickCover } from './components';\nimport { RGBColor } from '../../types';\n\ntype Props = {\n  userColor: RGBColor,\n  setUserColor: (newColor: RGBColor) => void;\n}\nexport default function ColorPicker(props: Props) {\n  const { userColor, setUserColor } = props;\n  const [ showColorPicker, setShowColorPicker ] = useState(false);\n  const onColorPickerClick = () => setShowColorPicker(!showColorPicker);\n  const onUserColorChange = (color: { rgb: RGBColor }) => setUserColor(color.rgb);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <ColorSwatch onClick={onColorPickerClick}>\n        <ColorPreview userColor={ userColor }/>\n      </ColorSwatch>\n      { showColorPicker ? \n        <ColorPickPopover>\n          <ColorPickCover onClick={() => setShowColorPicker(false)} />\n          <SketchPicker color={userColor} onChange={onUserColorChange} />\n        </ColorPickPopover> \n      : null }\n    </div>\n  )\n}","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport ColorPicker from '../pages/Login/ColorPicker';\nimport { Input, Typography, notification } from 'antd';\nimport { AppContext } from '../context/ContextProvider';\n\nconst { Title } = Typography;\n\nconst AddNickname = () => {\n\n  const { nickname, setNickname, userColor, setUserColor } = useContext(AppContext);\n\n  const onNickChange = (event: any) => {\n    const nick = event.target.value;\n    if (!nick)\n      notification.warning({\n        message: \">:C\",\n        description: \"You need to provide a nickname!!!\"\n      });\n    else setNickname(nick);\n  }\n\n  return (\n    <Group>\n      <Title level={5} style={{ margin: 0, padding: 0 }} >Write your name and pick color</Title>\n      <Row>\n        <Input\n          placeholder=\"Nickname\"\n          value={nickname}\n          onChange={onNickChange}\n          style={{\n            margin: '8px 12px 8px 0',\n            color: `rgba(${userColor.r},${userColor.g},${userColor.b},${userColor.a})`\n          }} />\n        <ColorPicker userColor={userColor} setUserColor={setUserColor} />\n      </Row>\n    </Group>\n  )\n}\n\nexport default AddNickname;\n\nexport const Group = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 12px 0;\n`\n\n\nexport const Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Input, Button, Typography, notification } from 'antd';\nimport { AppContext } from '../../context/ContextProvider';\nimport AddNickname, { Group } from '../../components/AddNickname';\n\nconst { Title, Text } = Typography;\n\nconst Wrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n`;\nconst Prompt = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-width: 400px;\n`\n\n\nexport default function LoginPage() {\n    return <Wrapper>\n        <LoginPrompt />\n    </Wrapper>\n}\n\nfunction LoginPrompt() {\n    const history = useHistory();\n\n    const { nickname } = useContext(AppContext);\n    const [roomName, setRoomName] = useState('');\n\n\n    const onRoomChange = (event: any) => {\n        setRoomName(event.target.value);\n    }\n\n    const onLoginClick = () => {\n        if (!nickname?.length || !roomName?.length) {\n            const missing = [];\n            if (!nickname?.length) missing.push('nickname');\n            if (!roomName?.length) missing.push('room name');\n            notification.warning({\n                message: \"Couldn't proceed\",\n                description: `You need to provide ${missing.join(' and ')} to be able to proceed!`\n            });\n        }\n        else {\n            notification.success({\n                message: \"Yay!\",\n                description: `You successfully joined a \"${roomName.toUpperCase()}\" room!`\n            });\n            const standarizedRoomName = roomName.replace(' ', '');\n\n            history.push(`/room/${standarizedRoomName}`);\n        }\n    }\n\n\n    return <Prompt>\n        <Title level={2} style={{ fontWeight: 600 }}>Helloooooooo</Title>\n        <AddNickname />\n        <Group>\n            <Title level={5} style={{ margin: 0, padding: 0 }} >Enter room name</Title>\n            <Text style={{ margin: 0, padding: 0 }} >Should be unique!</Text>\n            <Input placeholder=\"Room name\" value={roomName} onChange={onRoomChange} style={{ margin: \"8px 0\" }} />\n        </Group>\n        <Group>\n            <Button type=\"primary\" onClick={onLoginClick}>Login</Button>\n        </Group>\n    </Prompt>\n}\n","import styled from 'styled-components';\n\ntype TFlex = {\n  row?: boolean;\n  column?: boolean;\n  justify?: boolean;\n  align?: boolean;\n  grow?: boolean;\n  style?: any;\n};\n\nconst Flex = styled.div.attrs((props: TFlex) => {\n  const { row, column, justify, align, style } = props;\n  const newStyle = { ...style };\n  if (row) {\n    newStyle.flexDirection = 'row';\n  }\n  if (column) {\n    newStyle.flexDirection = 'column';\n  }\n  if (justify) {\n    newStyle.justifyContent = 'center';\n  }\n  if (align) {\n    newStyle.alignItems = 'center';\n  }\n  return {\n    style: newStyle,\n  };\n})<TFlex>`\n  display: flex;\n\n  > * {\n    flex-grow: ${(props) => (props.grow ? 1 : 'unset')};\n  }\n`;\n\nexport default Flex;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Flex from '../../../components/Flex';\n\nimport reactions from '../../../mock/reactions.json';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\ntype Props = {\n    reactions: {\n        clap: number,\n        boo: number,\n        laugh: number\n    }\n}\nexport default function ReactionSummary(props: Props) {\n    const currentReactions = Object.entries(props.reactions)\n        .map(reaction => ({\n            id: reaction[0],\n            number: reaction[1]\n        })) ?? [];\n    const mappedReactions = currentReactions.map((currentReaction: any) => {\n        const emoji = reactions.find(reaction => reaction.id === currentReaction.id)?.emoji;\n        return (\n            <Flex row style={{ margin: '0 4px'}}>{emoji} {currentReaction?.number}</Flex>\n        )\n    })\n    return (\n        <Wrapper>\n            { mappedReactions }\n        </Wrapper>\n    )\n}\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Typography } from 'antd';\nimport { AppContext } from '../../../context/ContextProvider';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n    background: #FFFFFF;\n    border: 1px solid #E8E8E8;\n    box-sizing: border-box;\n    border-radius: 8px;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 40px;\n`;\n\nexport default function Presentation({ winner }: { winner: string }) {\n    const { roomState } = useContext(AppContext);\n    const presentationTitle = roomState?.presentations[roomState?.currentPresentation]?.name\n        ?? '404 PRESENTATION NOT FOUND';\n\n    if (!roomState.resultsVisible)\n        return (<Wrapper>\n            <Title level={1}>{presentationTitle}</Title>\n            <Title level={5}>Share your reactions 🔥</Title>\n        </Wrapper>)\n    \n    return (\n        <Wrapper>\n        <Title level={1}>WINNER IS: {winner} 🏆🏆🏆🏆</Title>\n        <Title level={5}>Nicely done 🔥</Title>\n        </Wrapper>\n    )\n}\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Flex from '../../../components/Flex';\nimport ClapButton from 'react-clap-button';\n\nimport reactions from '../../../mock/reactions.json';\nimport { AppContext } from '../../../context/ContextProvider';\n\n\nexport default function ReactionBar() {\n\n    const { socket } = useContext(AppContext);\n\n    const onReactionClick = (reactionType: string) => {\n        console.log(\"hi\")\n        socket?.emit('reaction', { type: reactionType });\n    }\n    const mappedReactions = reactions.map((reaction) => {\n        return (\n            <div style={{ margin: '20px' }} onClick={() => onReactionClick(reaction.id)}\n            >\n                <ClapButton\n                    size={100}\n                    iconComponent={() => <h1 style={{ fontSize: '50px', marginBottom: '10px' }}>{reaction.emoji}</h1>}\n                />\n            </div>\n        )\n    })\n    return (\n        <Flex row justify align style={{ padding: '50px' }}>\n            {mappedReactions}\n        </Flex>\n    )\n}\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Typography } from 'antd';\nimport Flex from '../../../components/Flex';\nimport { RGBColor } from '../../../types';\nimport { AppContext, DEFAULT_COLOR } from '../../../context/ContextProvider';\n\nconst { Title } = Typography;\n\nconst toRGB = (userColor: RGBColor) => {\n    return `rgba(${userColor.r},${userColor.g},${userColor.b},${userColor.a})`;\n}\nconst OnlineUser = styled.div<{ userColor: RGBColor }>`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 4px 8px;\n    border-radius: 8px;\n    margin: 0 4px;\n    font-weight: bold;\n    color: white;\n    background: ${({ userColor }) => userColor.r ? toRGB(userColor) : toRGB(DEFAULT_COLOR)};\n`;\n\nexport default function OnlineList() {\n    const { roomState } = useContext(AppContext);\n    const mappedAdmins = () => roomState?.users\n        .filter((user: any) => user.isAdmin)\n        .map((user: any) =>\n            <OnlineUser key={user.id} userColor={user.color || DEFAULT_COLOR}>@{user.user}</OnlineUser>\n        );\n    const mappedUsers = () => roomState?.users\n        .filter((user: any) => !user.isAdmin)\n        .map((user: any) =>\n            <OnlineUser key={user.id} userColor={user.color || DEFAULT_COLOR}>@{user.user}</OnlineUser>\n        );\n\n    return (\n        <Flex column>\n            <Flex row align style={{ position: 'sticky', justifyContent: 'flex-start', margin: '4px 0' }}>\n                <Title level={5} style={{ margin: 0 }}>Admins:</Title>\n                {mappedAdmins()}\n            </Flex>\n            <Flex row align style={{ position: 'sticky', justifyContent: 'flex-start', margin: '4px 0' }}>\n                <Title level={5} style={{ margin: 0 }}>Online now:</Title>\n                {mappedUsers()}\n            </Flex>\n        </Flex>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { AppContext } from '../../../context/ContextProvider';\n\nconst MULTIPLIER = 2;\n\nexport default function Sound() {\n  const { roomState: { soundLevel = { clap: 0, laugh: 0 }, users, resultsVisible } } = useContext(AppContext);\n\n  const [clap1, setClap1] = useState(false);\n  const [clap2, setClap2] = useState(false);\n  const [clap3, setClap3] = useState(false);\n  const [clap4, setClap4] = useState(false);\n\n  const [laugh1, setLaugh1] = useState(false);\n  const [laugh2, setLaugh2] = useState(false);\n  const [laugh3, setLaugh3] = useState(false);\n  const [laugh4, setLaugh4] = useState(false);\n\n  useEffect(() => {\n    const { clap: clapCount, laugh: laughCount } = soundLevel;\n    const numOnlineUsers = users.length;\n\n    const clapMeter = Math.min(1, clapCount / (MULTIPLIER * numOnlineUsers));\n    const laughMeter = Math.min(1, laughCount / (MULTIPLIER * numOnlineUsers));\n\n    if (clapMeter > 0 && !clap1) {\n      setClap1(true);\n      setTimeout(() => {\n        setClap1(false);\n      }, 8000);\n    } else if (clapMeter >= 0.25 && !clap2) {\n      setClap2(true);\n      setTimeout(() => {\n        setClap2(false);\n      }, 6000);\n    } else if (clapMeter >= 0.5 && !clap3) {\n      setClap3(true);\n      setTimeout(() => {\n        setClap3(false);\n      }, 6000);\n    } else if (clapMeter === 0.75 && !clap4) {\n      setClap4(true);\n      setTimeout(() => {\n        setClap4(false);\n      }, 9000);\n    }\n\n    if (laughMeter > 0 && !laugh1) {\n      setLaugh1(true);\n      setTimeout(() => {\n        setLaugh1(false);\n      }, 3000);\n    } else if (laughMeter >= 0.25 && !laugh2) {\n      setLaugh2(true);\n      setTimeout(() => {\n        setLaugh2(false);\n      }, 5000);\n    } else if (laughMeter >= 0.5 && !laugh3) {\n      setLaugh3(true);\n      setTimeout(() => {\n        setLaugh3(false);\n      }, 11000);\n    } else if (laughMeter === 0.75 && !laugh4) {\n      setLaugh4(true);\n      setTimeout(() => {\n        setLaugh4(false);\n      }, 9000);\n    }\n  }, [clap1, clap2, clap3, clap4, laugh1, laugh2, laugh3, laugh4, soundLevel, users.length]);\n\n  return (\n    <div>\n      {clap1 && <ReactAudioPlayer src=\"/applause-01.mp3\" autoPlay />}\n      {clap2 && <ReactAudioPlayer src=\"/applause-02.mp3\" autoPlay />}\n      {clap3 && <ReactAudioPlayer src=\"/applause-03.mp3\" autoPlay />}\n      {(resultsVisible\n        || clap4) && <ReactAudioPlayer src=\"/applause-04.mp3\" autoPlay />}\n      {laugh1 && <ReactAudioPlayer src=\"/laugh-01.mp3\" autoPlay />}\n      {laugh2 && <ReactAudioPlayer src=\"/laugh-02.mp3\" autoPlay />}\n      {laugh3 && <ReactAudioPlayer src=\"/laugh-03.mp3\" autoPlay />}\n      {laugh4 && <ReactAudioPlayer src=\"/clap.mp3\" autoPlay />}\n      {resultsVisible && <ReactAudioPlayer src=\"/music.mp3\" autoPlay />}\n    </div>\n  )\n}\n","import React, { useContext } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Typography } from 'antd';\nimport Flex from '../../../components/Flex';\nimport { AppContext } from '../../../context/ContextProvider';\nimport ReactionSummary from '../ReactionSummary';\nimport Presentation from '../Presentation';\nimport ReactionBar from '../ReactionBar';\nimport OnlineList from '../OnlineList';\nimport Sound from '../Sound';\nimport Confetti from \"react-confetti\";\n\nconst { Title, Text } = Typography;\n\nconst Wrapper = styled.div`\n    padding: 40px;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n`;\n\nexport default function Main() {\n    const { roomid } = useParams<{ roomid: string }>()\n    const { roomState } = useContext(AppContext);\n    const currentPresentation = roomState?.presentations[roomState?.currentPresentation ?? 0];\n    const reactions = currentPresentation?.reactions ?? {};\n\n    const presentationList = roomState?.presentations\n        .map((presentation: any) => {\n            const reactions = Object.values(presentation.reactions) ?? [];\n            const points = reactions.reduce((sum: number, point: any) => sum + point, 0) ?? 0;\n            return {\n                ...presentation,\n                points\n            };\n        })\n        .sort((a: any, b: any) => b.points - a.points) ?? []\n\n    return (\n        <Wrapper>\n            {roomState?.resultsVisible && <Confetti\n                gravity={0.05}\n                run={!!roomState?.resultsVisible}\n                numberOfPieces={400}\n            />}\n            <Text>Room ID:</Text>\n            <Flex row style={{ justifyContent: \"space-between\" }}>\n                <Title level={3}>{roomid}</Title>\n                {roomState?.resultsVisible ?\n                    <h3>Winner is: {presentationList[0]?.name} 🚀🚀🚀</h3>\n                    :\n                    <ReactionSummary reactions={reactions} />}\n            </Flex>\n            <Presentation winner={presentationList[0] ? presentationList[0]?.name : 'not yet'} />\n            <ReactionBar />\n            <OnlineList />\n            <Sound />\n        </Wrapper>\n    )\n}\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Typography, Tooltip } from 'antd';\nimport { AppContext } from '../../../context/ContextProvider';\nimport Flex from '../../../components/Flex';\nimport ReactionSummary from '../ReactionSummary';\n\nconst { Title } = Typography;\n\nconst Place = styled.div.attrs(({ winner } : { winner: boolean }) => {\n    const style: any = {};\n    if (winner) {\n        style.border = '2px solid #E08506';\n    }\n    return { style };\n})<{winner: boolean}>`\n    min-width: 32px;\n    min-height: 32px;\n    max-width: 32px;\n    max-height: 32px;\n    border: 2px solid black;\n    border-radius: 20px;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: bold;\n    padding: 0;\n    margin-right: 8px;\n`;\n\nconst PresentationList = styled.div`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n`\nconst Presentation = styled.div.attrs(({ isActive } : { isActive: boolean }) => {\n    const style: any = { backround: 'transparent' };\n    if (isActive) style.background = \"#FFF1CC\"; \n    return { style }\n})<{isActive: boolean}>`\n    display: flex;\n    flex-direction: row;\n    padding: 12px;\n    border-radius: 12px;\n    margin: 8px 0;\n    cursor: pointer;\n    &:hover {\n        background: white;\n    }\n`\n\nexport default function Leaderboards(): JSX.Element {\n    const { roomState, socket } = useContext(AppContext);\n    const currentPresentation = roomState?.currentPresentation ?? 0;\n    const isAdmin = true;\n    const resultsVisible = roomState?.resultsVisible;\n    const presentationList = resultsVisible \n        ? roomState?.presentations\n            .map((presentation: any) => {\n                const reactions = Object.values(presentation.reactions) ?? [];\n                const points = reactions.reduce((sum: number, point: any) => sum + point, 0) ?? 0;\n                return {\n                    ...presentation,\n                    points\n                };\n            })\n            .sort((a: any, b: any) => b.points - a.points) ?? []\n        : roomState?.presentations ?? [];\n\n    const onPresentationClick = (presentationIndex: number) => {\n        if (isAdmin) {\n            socket?.emit('setActivePresentation', { presentationIndex })\n        }\n    };\n\n    const presentations = presentationList.map((presentation: any, index: number) => {\n        const isWinner = index === 0;\n        const reactions = presentation.reactions ?? {};\n        return (\n            <Tooltip title={presentation.name} placement=\"left\">\n                <Presentation isActive={index === currentPresentation} onClick={() => onPresentationClick(index)}>\n                    <Place winner={resultsVisible && isWinner}>{resultsVisible && isWinner ? '🏆' : index + 1}</Place>\n                    <Flex column>\n                        <Title level={5} style={{ overflow: 'hidden'}}>\n                            {presentation.name?.length > 30 ? presentation.name?.substring(0,27) + '...' : presentation.name}\n                        </Title>\n                        {resultsVisible && <ReactionSummary reactions={reactions} />}\n                    </Flex>\n                </Presentation>\n            </Tooltip>\n        )\n    });\n    return <PresentationList>{presentations}</PresentationList>\n}","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { Typography, Input, Button, Popconfirm, notification } from 'antd';\nimport Flex from '../../../components/Flex';\nimport { AppContext } from '../../../context/ContextProvider';\nimport Leaderboards from './Leaderboards';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n    background-color: #FAFAFA;\n    padding: 20px;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    overflow-y: scroll;\n    flex-direction: column;\n    border: 1px solid #E8E8E8;\n`\n\nexport default function Sidebar() {\n    const { socket, roomState, getIsAdmin } = useContext(AppContext);\n    const resultsVisible = roomState?.resultsVisible;\n    const isAdmin = getIsAdmin();\n    const [presentationTitle, setPresentationTitle] = useState('');\n\n    const onChangePresentationTitle = (event: any) => \n        setPresentationTitle(event.target.value);\n    const onNewPresentationAdd = () => {\n        socket?.emit('addPresentation', { name: presentationTitle });\n        notification.success({ message: 'Yay!', description: 'New presentation added!' });\n        setPresentationTitle('');\n    }\n    const onShowVotingResults = () => {\n        socket?.emit('showResults', { show: !resultsVisible });\n    }\n\n    return (\n        <Wrapper>\n            { isAdmin && \n                <Flex column style={{ border: \"1px solid #f0d1d1\", borderRadius: '4px', padding: '8px' }}>\n                    <Flex column>\n                        <Title level={3}>Admin panel</Title>\n                        <Title level={4}>Add a presentation</Title>\n                        <Input \n                            value={presentationTitle} \n                            onChange={onChangePresentationTitle} \n                            placeholder=\"Insert new title here\"\n                        />\n                        <Button type=\"primary\" onClick={onNewPresentationAdd} style={{ margin: '12px 0' }}>Add</Button>\n                    </Flex>\n                    <Flex column style={{ margin: '12px 0'}}>\n                        <Title level={4}>Show voting results</Title>\n                        <Popconfirm\n                            title={`Are you ABSOLUTELY SURE you want to ${ resultsVisible ? 'hide' : 'show'} voting results?`}\n                            onConfirm={onShowVotingResults}\n                            onCancel={() => {}}\n                            okText=\"Do eet\"\n                            cancelText=\"Nope :c\"\n                            placement=\"left\"\n                        >\n                            <Button type=\"primary\" danger>{resultsVisible ? 'Hide' : \"Show\"}</Button>\n                        </Popconfirm>\n                    </Flex>\n                </Flex>\n            }\n            <Flex column style={{ margin: '12px 0'}}>\n                <Title level={3}>Leadership board</Title>\n                <Leaderboards />\n            </Flex>\n        </Wrapper>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext, useState } from 'react';\nimport styled from 'styled-components';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport { AppContext } from '../../context/ContextProvider';\nimport { useParams } from 'react-router-dom';\nimport Modal from 'antd/lib/modal';\nimport AddNickname from '../../components/AddNickname';\n\nconst Wrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n`;\n\nexport default function Room() {\n    const { startConnection, nickname } = useContext(AppContext);\n    const { roomid } = useParams<{ roomid: string }>();\n\n    const [isVisible, setIsVisible] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (roomid && nickname !== '' && !isVisible) {\n            startConnection(roomid)\n        }\n        if (nickname === '')\n            setIsVisible(true)\n\n    }, [roomid, nickname, isVisible])\n\n    return (\n        <Wrapper>\n            <SplitterLayout\n                percentage\n                primaryMinSize={70}\n                secondaryInitialSize={20}\n            >\n                <Main />\n                <Sidebar />\n            </SplitterLayout>\n            <Modal visible={isVisible} cancelButtonProps={{ style: { visibility: 'hidden' } }}\n                onOk={() => setIsVisible(false)}\n            >\n                <AddNickname />\n            </Modal>\n        </Wrapper>\n    )\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Room from './pages/Room';\nimport 'antd/dist/antd.css';\nimport AppContextProvider from './context/ContextProvider';\n\nexport default function App(): JSX.Element {\n\n  return (\n    <AppContextProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n          <Route exact path=\"/room/:roomid\">\n            <Room />\n          </Route>\n        </Switch>\n      </Router>\n    </AppContextProvider>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}