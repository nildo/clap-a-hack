{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","io","Wrapper","styled","div","Row","Column","App","useState","numOnlineUsers","laughCount","state","setState","useEffect","on","data","console","log","onClick","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0qBAIA,IAAMA,EAASC,eAqCf,IAAMC,EAAUC,IAAOC,IAAV,KAUPC,EAAMF,IAAOC,IAAV,KAOHE,EAASH,IAAOC,IAAV,KAKGG,EAzDf,WAAgB,IAAD,EACaC,mBAAS,CACjCC,eAAgB,EAChBC,WAAY,IAHD,mBACNC,EADM,KACCC,EADD,KAMbC,qBAAU,WACRb,EAAOc,GAAG,eAAe,SAACC,GACxBH,EAASG,QAEV,IAEHC,QAAQC,IAAIN,GAEZ,IAKQF,EAA+BE,EAA/BF,eAAgBC,EAAeC,EAAfD,WAExB,OACE,eAACR,EAAD,CAASgB,QARO,WAChBF,QAAQC,IAAI,aACZjB,EAAOmB,KAAK,UAMZ,UACE,eAACd,EAAD,WACE,cAACC,EAAD,sBACA,cAACA,EAAD,UAASG,OAEX,eAACJ,EAAD,WACE,cAACC,EAAD,sBACA,cAACA,EAAD,UAASI,WCrBFU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a0b0ff5c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { io } from 'socket.io-client';\n\nconst socket = io();\n\nfunction App() {\n  const [state, setState] = useState({\n    numOnlineUsers: 0,\n    laughCount: 0,\n  });\n\n  useEffect(() => {\n    socket.on('stateUpdate', (data: any) => {\n      setState(data);\n    });\n  }, []);\n\n  console.log(state);\n\n  const sendClick = () => {\n    console.log('sendClick');\n    socket.emit('laugh');\n  }\n\n  const { numOnlineUsers, laughCount } = state;\n\n  return (\n    <Wrapper onClick={sendClick}>\n      <Row>\n        <Column>Online:</Column>\n        <Column>{numOnlineUsers}</Column>\n      </Row>\n      <Row>\n        <Column>Laughs:</Column>\n        <Column>{laughCount}</Column>\n      </Row>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst Row = styled.div`\n  margin: 10px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Column = styled.div`\n  margin: 0 10px;\n`;\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}