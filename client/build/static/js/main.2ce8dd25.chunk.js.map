{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","io","Wrapper","styled","div","Row","Column","App","useState","numOnlineUsers","laughCount","state","setState","playing1","setPlaying1","playing2","setPlaying2","playing3","setPlaying3","playing4","setPlaying4","useEffect","on","data","meter","Math","min","setTimeout","onClick","emit","src","autoPlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0rBAKA,IAAMA,EAASC,eAsEf,IAAMC,EAAUC,IAAOC,IAAV,KAUPC,EAAMF,IAAOC,IAAV,KAOHE,EAASH,IAAOC,IAAV,KAKGG,EAxFf,WAAgB,IAAD,EACaC,mBAAS,CACjCC,eAAgB,EAChBC,WAAY,IAHD,mBACNC,EADM,KACCC,EADD,OAKmBJ,oBAAS,GAL5B,mBAKNK,EALM,KAKIC,EALJ,OAMmBN,oBAAS,GAN5B,mBAMNO,EANM,KAMIC,EANJ,OAOmBR,oBAAS,GAP5B,mBAONS,EAPM,KAOIC,EAPJ,OAQmBV,oBAAS,GAR5B,mBAQNW,EARM,KAQIC,EARJ,KAUbC,qBAAU,WACRrB,EAAOsB,GAAG,eAAe,SAACC,GACxBX,EAASW,QAEV,IAEHF,qBAAU,WAAO,IACPZ,EAA+BE,EAA/BF,eAAgBC,EAAeC,EAAfD,WAClBc,EAAQC,KAAKC,IAAI,EAAGhB,GApBX,EAoBsCD,IACjDe,GAAS,MAASX,GACpBC,GAAY,GACZa,YAAW,WACTb,GAAY,KACX,MACMU,GAAS,KAAQT,GAC1BC,GAAY,GACZW,YAAW,WACTX,GAAY,KACX,MACMQ,GAAS,MAASP,GAC3BC,GAAY,GACZS,YAAW,WACTT,GAAY,KACX,OACgB,IAAVM,GAAgBL,IACzBC,GAAY,GACZO,YAAW,WACTP,GAAY,KACX,QAEJ,CAACP,EAAUE,EAAUE,EAAUE,EAAUR,IAE5C,IAIQF,EAA+BE,EAA/BF,eAAgBC,EAAeC,EAAfD,WAExB,OACE,eAACR,EAAD,CAAS0B,QAPO,WAChB5B,EAAO6B,KAAK,UAMZ,UACE,eAACxB,EAAD,WACE,cAACC,EAAD,sBACA,cAACA,EAAD,UAASG,OAEX,eAACJ,EAAD,WACE,cAACC,EAAD,sBACA,cAACA,EAAD,UAASI,OAEVG,GAAY,cAAC,IAAD,CAAkBiB,IAAI,eAAeC,UAAQ,IACzDhB,GAAY,cAAC,IAAD,CAAkBe,IAAI,eAAeC,UAAQ,IACzDd,GAAY,cAAC,IAAD,CAAkBa,IAAI,eAAeC,UAAQ,IACzDZ,GAAY,cAAC,IAAD,CAAkBW,IAAI,WAAWC,UAAQ,QCxD7CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ce8dd25.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { io } from 'socket.io-client';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst socket = io();\n\nconst MULTIPLIER = 3;\n\nfunction App() {\n  const [state, setState] = useState({\n    numOnlineUsers: 0,\n    laughCount: 0,\n  });\n  const [playing1, setPlaying1] = useState(false);\n  const [playing2, setPlaying2] = useState(false);\n  const [playing3, setPlaying3] = useState(false);\n  const [playing4, setPlaying4] = useState(false);\n\n  useEffect(() => {\n    socket.on('stateUpdate', (data: any) => {\n      setState(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const { numOnlineUsers, laughCount } = state;\n    const meter = Math.min(1, laughCount / (MULTIPLIER * numOnlineUsers));\n    if (meter >= 0.25 && !playing1) {\n      setPlaying1(true);\n      setTimeout(() => {\n        setPlaying1(false);\n      }, 3000);\n    } else if (meter >= 0.5 && !playing2) {\n      setPlaying2(true);\n      setTimeout(() => {\n        setPlaying2(false);\n      }, 5000);\n    } else if (meter >= 0.75 && !playing3) {\n      setPlaying3(true);\n      setTimeout(() => {\n        setPlaying3(false);\n      }, 11000);\n    } else if (meter === 1 && !playing4) {\n      setPlaying4(true);\n      setTimeout(() => {\n        setPlaying4(false);\n      }, 9000);\n    }\n  }, [playing1, playing2, playing3, playing4, state])\n\n  const sendClick = () => {\n    socket.emit('laugh');\n  }\n\n  const { numOnlineUsers, laughCount } = state;\n\n  return (\n    <Wrapper onClick={sendClick}>\n      <Row>\n        <Column>Online:</Column>\n        <Column>{numOnlineUsers}</Column>\n      </Row>\n      <Row>\n        <Column>Laughs:</Column>\n        <Column>{laughCount}</Column>\n      </Row>\n      {playing1 && <ReactAudioPlayer src=\"laugh-01.mp3\" autoPlay/>}\n      {playing2 && <ReactAudioPlayer src=\"laugh-02.mp3\" autoPlay/>}\n      {playing3 && <ReactAudioPlayer src=\"laugh-03.mp3\" autoPlay/>}\n      {playing4 && <ReactAudioPlayer src=\"clap.mp3\" autoPlay/>}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst Row = styled.div`\n  margin: 10px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Column = styled.div`\n  margin: 0 10px;\n`;\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}