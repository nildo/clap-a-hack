{"version":3,"sources":["context/ContextProvider.tsx","pages/Login/components.tsx","pages/Login/ColorPicker.tsx","components/AddNickname.tsx","pages/Login/index.tsx","components/Flex.tsx","pages/Room/ReactionSummary/index.tsx","pages/Room/Presentation/index.tsx","pages/Room/ReactionBar/index.tsx","pages/Room/OnlineList/index.tsx","pages/Room/Sound/index.tsx","pages/Room/Main/index.tsx","pages/Room/Sidebar/components.tsx","pages/Room/Sidebar/Leaderboards.tsx","pages/Room/Sidebar/index.tsx","pages/Room/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DEFAULT_COLOR","r","g","b","a","DEFAULT_ROOM_STATE","currentPresentation","presentations","reactions","users","resultsVisible","defaultState","socket","undefined","startConnection","nickname","setNickname","setUserColor","userColor","roomState","getIsAdmin","AppContext","createContext","AppContextProvider","children","useState","setSocket","setRoomState","useEffect","on","data","console","log","name","index","Provider","value","roomId","newSocket","io","query","room","user","color","JSON","stringify","filter","isAdmin","find","admin","ColorSwatch","styled","div","ColorPickPopover","ColorPickCover","ColorPreview","attrs","props","style","backgroundColor","ColorPicker","showColorPicker","setShowColorPicker","position","onClick","onChange","rgb","Title","Typography","AddNickname","useContext","Group","level","margin","padding","Row","placeholder","event","nick","target","notification","warning","message","description","Text","Wrapper","Prompt","LoginPage","LoginPrompt","history","useHistory","roomName","setRoomName","fontWeight","type","length","success","toUpperCase","standarizedRoomName","replace","push","missing","join","Flex","row","column","justify","align","newStyle","flexDirection","justifyContent","alignItems","grow","ReactionSummary","mappedReactions","Object","entries","map","reaction","id","number","currentReaction","emoji","Presentation","winner","presentationTitle","textAlign","ReactionBar","reactionType","emit","iconComponent","fontSize","OnlineUser","toRGB","parse","OnlineList","setIsAdmin","isUserAdmin","userMenu","Item","onChangeAdminClick","adminMenu","mappedAdmins","overlay","trigger","disabled","mappedUsers","toAdmin","userToAdmin","userToDeadmin","minWidth","flexWrap","Sound","soundLevel","clap","laugh","clap1","setClap1","clap2","setClap2","clap3","setClap3","clap4","setClap4","laugh1","setLaugh1","laugh2","setLaugh2","laugh3","setLaugh3","laugh4","setLaugh4","clapCount","laughCount","numOnlineUsers","clapMeter","Math","min","laughMeter","setTimeout","src","autoPlay","Main","roomid","useParams","presentationList","presentation","points","values","reduce","sum","point","sort","Place","border","PresentationList","backround","isActive","background","Leaderboards","isWinner","title","placement","presentationIndex","overflow","substring","onConfirm","onCancel","okText","cancelText","shape","icon","DeleteOutlined","danger","Sidebar","setPresentationTitle","borderRadius","show","Room","isVisible","setIsVisible","sidebarVisible","setSidebarVisible","handleWindowSize","window","innerWidth","addEventListener","gravity","run","numberOfPieces","width","height","percentage","primaryMinSize","secondaryInitialSize","visible","cancelButtonProps","visibility","onOk","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cdf9707.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { RGBColor } from 'react-color';\r\nimport { io } from 'socket.io-client';\r\nimport { ContextState, RoomState } from './types';\r\n\r\nexport const DEFAULT_COLOR = {\r\n  r: 255,\r\n  g: 0,\r\n  b: 0,\r\n  a: 100\r\n};\r\n\r\nconst DEFAULT_ROOM_STATE = {\r\n  currentPresentation: -1,\r\n  presentations: [],\r\n  reactions: {},\r\n  users: [],\r\n  resultsVisible: false\r\n};\r\n\r\n\r\nconst defaultState: ContextState = {\r\n  socket: undefined,\r\n  startConnection: () => undefined,\r\n  nickname: '',\r\n  setNickname: () => undefined,\r\n  setUserColor: () => undefined,\r\n  userColor: DEFAULT_COLOR,\r\n  roomState: DEFAULT_ROOM_STATE,\r\n  getIsAdmin: () => false,\r\n};\r\n\r\nexport const AppContext = createContext<ContextState>(defaultState);\r\n\r\nconst AppContextProvider = ({ children }: { children: React.ReactChild }) => {\r\n  const [socket, setSocket] = useState<ContextState['socket']>();\r\n  const [nickname, setNickname] = useState('');\r\n  const [userColor, setUserColor] = useState<RGBColor>(DEFAULT_COLOR);\r\n  const [roomState, setRoomState] = useState<RoomState>(DEFAULT_ROOM_STATE);\r\n\r\n  const startConnection = (roomId: string) => {\r\n    const host = process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : '';\r\n    const newSocket = io(host, { query: { room: roomId, user: nickname, color: JSON.stringify(userColor) } });\r\n    console.log(userColor)\r\n    console.log(newSocket)\r\n    setSocket(newSocket)\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket?.on('stateUpdate', (data: any) => {\r\n      setRoomState(data);\r\n      console.log(data)\r\n      console.log(\"Data\", data)\r\n    });\r\n\r\n    socket?.on('addPresentation', (name: string) => {\r\n      setRoomState({\r\n        ...roomState,\r\n        presentations: [\r\n          ...roomState.presentations,\r\n          {\r\n            name,\r\n            reactions: {}\r\n          }\r\n        ]\r\n      })\r\n    })\r\n\r\n    socket?.on('setActivePresentation', (index: number) => {\r\n      setRoomState({\r\n        ...roomState,\r\n        currentPresentation: index\r\n      })\r\n    })\r\n\r\n    socket?.on('showResults', () => {\r\n      setRoomState({\r\n        ...roomState,\r\n        resultsVisible: true\r\n      })\r\n    })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socket]);\r\n\r\n  const getIsAdmin = () => {\r\n    const users = roomState?.users || [];\r\n    let admins = users.filter(user => user.isAdmin);\r\n\r\n    return admins.find(admin => admin.user === nickname) ? true : false;\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={{ socket, startConnection, nickname, setNickname, userColor, setUserColor, roomState, getIsAdmin }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AppContextProvider;\r\n","import styled from 'styled-components';\r\nimport { RGBColor } from '../../types';\r\n\r\nexport const ColorSwatch = styled.div`\r\n  padding: 5px;\r\n  background: #fff;\r\n  border-radius: 1px;\r\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ColorPickPopover = styled.div`\r\n  position: absolute;\r\n  z-index: 2;\r\n  background-color: white;\r\n  margin-left: -173px;\r\n`;\r\n\r\nexport const ColorPickCover = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n`;\r\n\r\nexport const ColorPreview = styled.div.attrs((props: { userColor: RGBColor }) => {\r\n  const { r, g, b, a } = props.userColor;\r\n  return {\r\n    style: {\r\n      backgroundColor: `rgba(${r},${g},${b},${a})`\r\n    }\r\n  }\r\n})<{ userColor: RGBColor }>`\r\n  width: 36px;\r\n  height: 14px;\r\n  border-radius: 2px;\r\n`;","import React, { useState } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { ColorSwatch, ColorPreview, ColorPickPopover, ColorPickCover } from './components';\r\nimport { RGBColor } from '../../types';\r\n\r\ntype Props = {\r\n  userColor: RGBColor,\r\n  setUserColor: (newColor: RGBColor) => void;\r\n}\r\nexport default function ColorPicker(props: Props) {\r\n  const { userColor, setUserColor } = props;\r\n  const [ showColorPicker, setShowColorPicker ] = useState(false);\r\n  const onColorPickerClick = () => setShowColorPicker(!showColorPicker);\r\n  const onUserColorChange = (color: { rgb: RGBColor }) => setUserColor(color.rgb);\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <ColorSwatch onClick={onColorPickerClick}>\r\n        <ColorPreview userColor={ userColor }/>\r\n      </ColorSwatch>\r\n      { showColorPicker ? \r\n        <ColorPickPopover>\r\n          <ColorPickCover onClick={() => setShowColorPicker(false)} />\r\n          <SketchPicker color={userColor} onChange={onUserColorChange} />\r\n        </ColorPickPopover> \r\n      : null }\r\n    </div>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport ColorPicker from '../pages/Login/ColorPicker';\r\nimport { Input, Typography, notification } from 'antd';\r\nimport { AppContext } from '../context/ContextProvider';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst AddNickname = () => {\r\n\r\n  const { nickname, setNickname, userColor, setUserColor } = useContext(AppContext);\r\n\r\n  const onNickChange = (event: any) => {\r\n    const nick = event.target.value;\r\n    if (!nick)\r\n      notification.warning({\r\n        message: \">:C\",\r\n        description: \"You need to provide a nickname!!!\"\r\n      });\r\n    else setNickname(nick);\r\n  }\r\n\r\n  return (\r\n    <Group>\r\n      <Title level={5} style={{ margin: 0, padding: 0 }} >Write your name and pick color</Title>\r\n      <Row>\r\n        <Input\r\n          placeholder=\"Nickname\"\r\n          value={nickname}\r\n          onChange={onNickChange}\r\n          style={{\r\n            margin: '8px 12px 8px 0',\r\n            color: `rgba(${userColor.r},${userColor.g},${userColor.b},${userColor.a})`\r\n          }} />\r\n        <ColorPicker userColor={userColor} setUserColor={setUserColor} />\r\n      </Row>\r\n    </Group>\r\n  )\r\n}\r\n\r\nexport default AddNickname;\r\n\r\nexport const Group = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 12px 0;\r\n`\r\n\r\n\r\nexport const Row = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Input, Button, Typography, notification } from 'antd';\r\nimport { AppContext } from '../../context/ContextProvider';\r\nimport AddNickname, { Group } from '../../components/AddNickname';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: white;\r\n`;\r\nconst Prompt = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 360px;\r\n    max-width: 100vw;\r\n`\r\n\r\n\r\nexport default function LoginPage() {\r\n    return <Wrapper>\r\n        <LoginPrompt />\r\n    </Wrapper>\r\n}\r\n\r\nfunction LoginPrompt() {\r\n    const history = useHistory();\r\n\r\n    const { nickname } = useContext(AppContext);\r\n    const [roomName, setRoomName] = useState('');\r\n\r\n\r\n    const onRoomChange = (event: any) => {\r\n        setRoomName(event.target.value);\r\n    }\r\n\r\n    const onLoginClick = () => {\r\n        if (!nickname?.length || !roomName?.length) {\r\n            const missing = [];\r\n            if (!nickname?.length) missing.push('nickname');\r\n            if (!roomName?.length) missing.push('room name');\r\n            notification.warning({\r\n                message: \"Couldn't proceed\",\r\n                description: `You need to provide ${missing.join(' and ')} to be able to proceed!`\r\n            });\r\n        }\r\n        else {\r\n            notification.success({\r\n                message: \"Yay!\",\r\n                description: `You successfully joined a \"${roomName.toUpperCase()}\" room!`\r\n            });\r\n            const standarizedRoomName = roomName.replace(' ', '');\r\n\r\n            history.push(`/room/${standarizedRoomName}`);\r\n        }\r\n    }\r\n\r\n\r\n    return <Prompt>\r\n        <Title level={2} style={{ fontWeight: 600 }}>Helloooooooo</Title>\r\n        <AddNickname />\r\n        <Group>\r\n            <Title level={5} style={{ margin: 0, padding: 0 }} >Enter room name</Title>\r\n            <Text style={{ margin: 0, padding: 0 }} >Should be unique!</Text>\r\n            <Input placeholder=\"Room name\" value={roomName} onChange={onRoomChange} style={{ margin: \"8px 0\" }} />\r\n        </Group>\r\n        <Group>\r\n            <Button type=\"primary\" onClick={onLoginClick}>Login</Button>\r\n        </Group>\r\n    </Prompt>\r\n}\r\n","import styled from 'styled-components';\r\n\r\ntype TFlex = {\r\n  row?: boolean;\r\n  column?: boolean;\r\n  justify?: boolean;\r\n  align?: boolean;\r\n  grow?: boolean;\r\n  style?: any;\r\n};\r\n\r\nconst Flex = styled.div.attrs((props: TFlex) => {\r\n  const { row, column, justify, align, style } = props;\r\n  const newStyle = { ...style };\r\n  if (row) {\r\n    newStyle.flexDirection = 'row';\r\n  }\r\n  if (column) {\r\n    newStyle.flexDirection = 'column';\r\n  }\r\n  if (justify) {\r\n    newStyle.justifyContent = 'center';\r\n  }\r\n  if (align) {\r\n    newStyle.alignItems = 'center';\r\n  }\r\n  return {\r\n    style: newStyle,\r\n  };\r\n})<TFlex>`\r\n  display: flex;\r\n\r\n  > * {\r\n    flex-grow: ${(props) => (props.grow ? 1 : 'unset')};\r\n  }\r\n`;\r\n\r\nexport default Flex;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../../context/ContextProvider';\r\nimport Flex from '../../../components/Flex';\r\n\r\nimport reactions from '../../../mock/reactions.json';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\n\r\ntype Props = {\r\n    reactions: {\r\n        clap: number,\r\n        boo: number,\r\n        laugh: number\r\n    }\r\n}\r\nexport default function ReactionSummary(props: Props) {\r\n    const { roomState } = useContext(AppContext);\r\n    const resultsVisible = roomState?.resultsVisible;\r\n    const currentReactions = Object.entries(props.reactions)\r\n        .map(reaction => ({\r\n            id: reaction[0],\r\n            number: reaction[1]\r\n        })) ?? [];\r\n    const mappedReactions = currentReactions.map((currentReaction: any) => {\r\n        const emoji = reactions.find(reaction => reaction.id === currentReaction.id)?.emoji;\r\n        return (\r\n            <Flex row style={{ margin: '0 4px'}}>{emoji}\r\n            {currentReaction?.number}</Flex>\r\n        )\r\n    })\r\n    return (\r\n        <Wrapper>\r\n            { resultsVisible && mappedReactions }\r\n        </Wrapper>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Typography } from 'antd';\r\nimport { AppContext } from '../../../context/ContextProvider';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n    background: #FFFFFF;\r\n    border: 1px solid #E8E8E8;\r\n    box-sizing: border-box;\r\n    border-radius: 8px;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 40px;\r\n`;\r\n\r\nexport default function Presentation({ winner }: { winner: string }) {\r\n    const { roomState } = useContext(AppContext);\r\n    const presentationTitle = roomState?.presentations[roomState?.currentPresentation]?.name\r\n        ?? '404 PRESENTATION NOT FOUND';\r\n\r\n    if (!roomState.resultsVisible)\r\n        return (<Wrapper>\r\n            <Title level={1} style={{ textAlign: 'center' }}>{presentationTitle}</Title>\r\n            <Title level={5}>Share your reactions 🔥</Title>\r\n        </Wrapper>)\r\n    \r\n    return (\r\n        <Wrapper>\r\n        <Title level={1} style={{ textAlign: 'center' }}>WINNER IS: {winner} 🏆🏆🏆🏆</Title>\r\n        <Title level={5}>Nicely done 🔥</Title>\r\n        </Wrapper>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Flex from '../../../components/Flex';\r\nimport ClapButton from 'react-clap-button';\r\n\r\nimport reactions from '../../../mock/reactions.json';\r\nimport { AppContext } from '../../../context/ContextProvider';\r\n\r\n\r\nexport default function ReactionBar() {\r\n\r\n    const { socket } = useContext(AppContext);\r\n\r\n    const onReactionClick = (reactionType: string) => {\r\n        console.log(\"hi\")\r\n        socket?.emit('reaction', { type: reactionType });\r\n    }\r\n    const mappedReactions = reactions.map((reaction) => {\r\n        return (\r\n            <div style={{ margin: '20px' }} onClick={() => onReactionClick(reaction.id)}\r\n            >\r\n                <ClapButton\r\n                    iconComponent={() => <div style={{ fontSize: 40 }}>{reaction.emoji}</div>}\r\n                />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <Flex row justify align style={{ padding: '50px' }}>\r\n            {mappedReactions}\r\n        </Flex>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Typography, Dropdown, Menu, Button } from 'antd';\r\nimport Flex from '../../../components/Flex';\r\nimport { RGBColor } from '../../../types';\r\nimport { AppContext, DEFAULT_COLOR } from '../../../context/ContextProvider';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst toRGB = (userColor: RGBColor) => {\r\n    return `rgba(${userColor.r},${userColor.g},${userColor.b},${userColor.a})`;\r\n}\r\nconst OnlineUser = styled.div<{ userColor: RGBColor }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    padding: 4px 8px;\r\n    border-radius: 8px;\r\n    margin: 4px;\r\n    font-weight: bold;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${({ userColor }) => {\r\n        const parsedColor = typeof userColor === 'string' ? JSON.parse(userColor) : userColor;\r\n        return toRGB(parsedColor);\r\n    }};\r\n`;\r\n\r\nexport default function OnlineList() {\r\n    const { socket, roomState, getIsAdmin } = useContext(AppContext);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    useEffect(() => {\r\n        const isUserAdmin = getIsAdmin();\r\n        setIsAdmin(isUserAdmin);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [roomState])\r\n\r\n    const userMenu = (user: any) => (\r\n        <Menu>\r\n            <Menu.Item key=\"0\">\r\n                <Button type=\"ghost\" onClick={() => onChangeAdminClick(user, true)}>Make admin</Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n    const adminMenu = (user: any) => (\r\n        <Menu>\r\n            <Menu.Item key=\"0\">\r\n                <Button type=\"ghost\" onClick={() => onChangeAdminClick(user, false)}>Remove admin</Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    const mappedAdmins = roomState?.users\r\n        .filter((user: any) => user.isAdmin)\r\n        .map((user: any) => <Dropdown overlay={adminMenu(user)} trigger={['click']} disabled={!isAdmin}>\r\n                <OnlineUser key={user.id} userColor={user.color ?? DEFAULT_COLOR}>@{user.user}</OnlineUser>\r\n            </Dropdown>\r\n    );\r\n    const mappedUsers = roomState?.users\r\n        .filter((user: any) => !user.isAdmin)\r\n        .map((user: any) => \r\n            <Dropdown overlay={userMenu(user)} trigger={['click']} disabled={!isAdmin}>\r\n                <OnlineUser \r\n                    key={user.id}\r\n                    userColor={user.color || DEFAULT_COLOR}\r\n                >\r\n                    @{user.user}\r\n                </OnlineUser>\r\n            </Dropdown>\r\n    );\r\n\r\n    const onChangeAdminClick = (user: any, toAdmin: boolean) => {\r\n        if (isAdmin) {\r\n            if (toAdmin)\r\n                socket?.emit('makeAdmin', { userToAdmin: user });\r\n            if (!toAdmin)\r\n                socket?.emit('removeAdmin', { userToDeadmin: user })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex column>\r\n            <Flex row align style={{ justifyContent: 'flex-start', margin: '4px 0' }}>\r\n                <Title level={5} style={{ margin: 0, minWidth: '100px' }}>Admins ({mappedAdmins?.length}):</Title>\r\n                <Flex row align style={{ flexWrap: 'wrap'}}>\r\n                    {mappedAdmins}\r\n                </Flex>\r\n            </Flex>\r\n            <Flex row align style={{ justifyContent: 'flex-start', margin: '4px 0' }}>\r\n                <Title level={5} style={{ margin: 0, minWidth: '100px' }}>Users ({mappedUsers?.length ?? 0}):</Title>\r\n                <Flex row align style={{ flexWrap: 'wrap'}}>\r\n                    {mappedUsers}\r\n                </Flex>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport { AppContext } from '../../../context/ContextProvider';\r\n\r\nconst MULTIPLIER = 2;\r\n\r\nexport default function Sound() {\r\n  const { roomState: { soundLevel = { clap: 0, laugh: 0 }, users, resultsVisible } } = useContext(AppContext);\r\n\r\n  const [clap1, setClap1] = useState(false);\r\n  const [clap2, setClap2] = useState(false);\r\n  const [clap3, setClap3] = useState(false);\r\n  const [clap4, setClap4] = useState(false);\r\n\r\n  const [laugh1, setLaugh1] = useState(false);\r\n  const [laugh2, setLaugh2] = useState(false);\r\n  const [laugh3, setLaugh3] = useState(false);\r\n  const [laugh4, setLaugh4] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { clap: clapCount, laugh: laughCount } = soundLevel;\r\n    const numOnlineUsers = users.length;\r\n\r\n    const clapMeter = Math.min(1, clapCount / (MULTIPLIER * numOnlineUsers));\r\n    const laughMeter = Math.min(1, laughCount / (MULTIPLIER * numOnlineUsers));\r\n\r\n    if (clapMeter > 0 && !clap1) {\r\n      setClap1(true);\r\n      setTimeout(() => {\r\n        setClap1(false);\r\n      }, 8000);\r\n    } else if (clapMeter >= 0.25 && !clap2) {\r\n      setClap2(true);\r\n      setTimeout(() => {\r\n        setClap2(false);\r\n      }, 6000);\r\n    } else if (clapMeter >= 0.5 && !clap3) {\r\n      setClap3(true);\r\n      setTimeout(() => {\r\n        setClap3(false);\r\n      }, 6000);\r\n    } else if (clapMeter === 0.75 && !clap4) {\r\n      setClap4(true);\r\n      setTimeout(() => {\r\n        setClap4(false);\r\n      }, 9000);\r\n    }\r\n\r\n    if (laughMeter > 0 && !laugh1) {\r\n      setLaugh1(true);\r\n      setTimeout(() => {\r\n        setLaugh1(false);\r\n      }, 3000);\r\n    } else if (laughMeter >= 0.25 && !laugh2) {\r\n      setLaugh2(true);\r\n      setTimeout(() => {\r\n        setLaugh2(false);\r\n      }, 5000);\r\n    } else if (laughMeter >= 0.5 && !laugh3) {\r\n      setLaugh3(true);\r\n      setTimeout(() => {\r\n        setLaugh3(false);\r\n      }, 11000);\r\n    } else if (laughMeter === 0.75 && !laugh4) {\r\n      setLaugh4(true);\r\n      setTimeout(() => {\r\n        setLaugh4(false);\r\n      }, 9000);\r\n    }\r\n  }, [clap1, clap2, clap3, clap4, laugh1, laugh2, laugh3, laugh4, soundLevel, users.length]);\r\n\r\n  return (\r\n    <div>\r\n      {clap1 && <ReactAudioPlayer src=\"/applause-01.mp3\" autoPlay />}\r\n      {clap2 && <ReactAudioPlayer src=\"/applause-02.mp3\" autoPlay />}\r\n      {clap3 && <ReactAudioPlayer src=\"/applause-03.mp3\" autoPlay />}\r\n      {(resultsVisible\r\n        || clap4) && <ReactAudioPlayer src=\"/applause-04.mp3\" autoPlay />}\r\n      {laugh1 && <ReactAudioPlayer src=\"/laugh-01.mp3\" autoPlay />}\r\n      {laugh2 && <ReactAudioPlayer src=\"/laugh-02.mp3\" autoPlay />}\r\n      {laugh3 && <ReactAudioPlayer src=\"/laugh-03.mp3\" autoPlay />}\r\n      {laugh4 && <ReactAudioPlayer src=\"/clap.mp3\" autoPlay />}\r\n      {resultsVisible && <ReactAudioPlayer src=\"/music.mp3\" autoPlay />}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Typography } from 'antd';\r\nimport Flex from '../../../components/Flex';\r\nimport { AppContext } from '../../../context/ContextProvider';\r\nimport ReactionSummary from '../ReactionSummary';\r\nimport Presentation from '../Presentation';\r\nimport ReactionBar from '../ReactionBar';\r\nimport OnlineList from '../OnlineList';\r\nimport Sound from '../Sound';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport default function Main() {\r\n    const { roomid } = useParams<{ roomid: string }>()\r\n    const { roomState } = useContext(AppContext);\r\n    const currentPresentation = roomState?.presentations[roomState?.currentPresentation ?? 0];\r\n    const reactions = currentPresentation?.reactions ?? {};\r\n\r\n    const presentationList = roomState?.presentations\r\n        .map((presentation: any) => {\r\n            const reactions = Object.values(presentation.reactions) ?? [];\r\n            const points = reactions.reduce((sum: number, point: any) => sum + point, 0) ?? 0;\r\n            return {\r\n                ...presentation,\r\n                points\r\n            };\r\n        })\r\n        .sort((a: any, b: any) => b.points - a.points) ?? []\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Text>Room ID:</Text>\r\n            <Flex row style={{ justifyContent: \"space-between\" }}>\r\n                <Title level={3}>{roomid}</Title>\r\n                {roomState?.resultsVisible ?\r\n                    <h3>Winner is: {presentationList[0]?.name} 🚀🚀🚀</h3>\r\n                    :\r\n                    <ReactionSummary reactions={reactions} />}\r\n            </Flex>\r\n            <Presentation winner={presentationList[0] ? presentationList[0]?.name : 'not yet'} />\r\n            <ReactionBar />\r\n            <OnlineList />\r\n            <Sound />\r\n        </Wrapper>\r\n    )\r\n}\r\n","import styled from 'styled-components';\n\nexport const Place = styled.div.attrs(({ winner } : { winner: boolean }) => {\n    const style: any = {};\n    if (winner) {\n        style.border = '2px solid #E08506';\n    }\n    return { style };\n})<{winner: boolean}>`\n    min-width: 32px;\n    min-height: 32px;\n    max-width: 32px;\n    max-height: 32px;\n    border: 2px solid black;\n    border-radius: 20px;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: bold;\n    padding: 0;\n    margin-right: 8px;\n`;\n\nexport const PresentationList = styled.div`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Presentation = styled.div.attrs(({ isActive } : { isActive: boolean }) => {\n    const style: any = { backround: 'transparent' };\n    if (isActive) style.background = \"#FFF1CC\"; \n    return { style }\n})<{isActive: boolean}>`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px;\n    border-radius: 12px;\n    margin: 8px 0;\n    cursor: pointer;\n    &:hover {\n        background: white;\n    }\n`;\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Typography, Tooltip, Button, Popconfirm } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { AppContext } from '../../../context/ContextProvider';\r\nimport Flex from '../../../components/Flex';\r\nimport ReactionSummary from '../ReactionSummary';\r\nimport { Place, PresentationList, Presentation } from './components';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Leaderboards(): JSX.Element {\r\n    const { roomState, socket, getIsAdmin } = useContext(AppContext);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const currentPresentation = roomState?.currentPresentation ?? 0;\r\n    \r\n    const resultsVisible = roomState?.resultsVisible;\r\n    const presentationList = resultsVisible \r\n        ? roomState?.presentations\r\n            .map((presentation: any) => {\r\n                const reactions = Object.values(presentation.reactions) ?? [];\r\n                const points = reactions.reduce((sum: number, point: any) => sum + point, 0) ?? 0;\r\n                return {\r\n                    ...presentation,\r\n                    points\r\n                };\r\n            })\r\n            .sort((a: any, b: any) => b.points - a.points) ?? []\r\n        : roomState?.presentations ?? [];\r\n\r\n    const onPresentationClick = (presentationIndex: number) => {\r\n        if (isAdmin) {\r\n            socket?.emit('setActivePresentation', { presentationIndex })\r\n        }\r\n    };\r\n    const onPresentationDeleteClick = (presentationIndex: number) => {\r\n        if (isAdmin) {\r\n            socket?.emit('deletePresentation', { presentationIndex })\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const isUserAdmin = getIsAdmin();\r\n        console.log(isUserAdmin)\r\n        setIsAdmin(isUserAdmin);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [roomState])\r\n\r\n    const presentations = presentationList.map((presentation: any, index: number) => {\r\n        const isWinner = index === 0;\r\n        const reactions = presentation.reactions ?? {};\r\n        return (\r\n            <Tooltip title={presentation.name} placement=\"left\">\r\n                <Presentation isActive={index === currentPresentation} onClick={() => onPresentationClick(index)}>\r\n                    <Flex row>\r\n                        <Place winner={resultsVisible && isWinner}>{resultsVisible && isWinner ? '🏆' : index + 1}</Place>\r\n                        <Flex column>\r\n                            <Title level={5} style={{ overflow: 'hidden'}}>\r\n                                {presentation.name?.length > 30 ? presentation.name?.substring(0,27) + '...' : presentation.name}\r\n                            </Title>\r\n                            <ReactionSummary reactions={reactions} />\r\n                        </Flex>\r\n                    </Flex>\r\n                    { isAdmin && \r\n                        <Popconfirm\r\n                            title={`Are you ABSOLUTELY SURE you want to DELETE this presentation FOREVER?`}\r\n                            onConfirm={() => onPresentationDeleteClick(index)}\r\n                            onCancel={() => {}}\r\n                            okText=\"Do eet\"\r\n                            cancelText=\"Nope :c\"\r\n                            placement=\"left\"\r\n                        >\r\n                            <Button \r\n                                shape=\"circle\" \r\n                                type=\"primary\" \r\n                                icon={<DeleteOutlined />}\r\n                                danger />\r\n                        </Popconfirm>\r\n                    }\r\n                </Presentation>\r\n            </Tooltip>\r\n        )\r\n    });\r\n    return <PresentationList>{presentations}</PresentationList>\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Typography, Input, Button, Popconfirm, notification } from 'antd';\r\nimport Flex from '../../../components/Flex';\r\nimport { AppContext } from '../../../context/ContextProvider';\r\nimport Leaderboards from './Leaderboards';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: #FAFAFA;\r\n    padding: 20px;\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: scroll;\r\n    flex-direction: column;\r\n    border: 1px solid #E8E8E8;\r\n`\r\n\r\nexport default function Sidebar() {\r\n    const { socket, roomState, getIsAdmin } = useContext(AppContext);\r\n    const resultsVisible = roomState?.resultsVisible;\r\n    const [presentationTitle, setPresentationTitle] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const onChangePresentationTitle = (event: any) => \r\n        setPresentationTitle(event.target.value);\r\n    const onNewPresentationAdd = () => {\r\n        if (!presentationTitle?.length)\r\n            notification.warning({ message: '>:C', description: 'You need to provide a name!' });\r\n        else {\r\n            socket?.emit('addPresentation', { name: presentationTitle });\r\n            notification.success({ message: 'Yay!', description: 'New presentation added!' });\r\n            setPresentationTitle('');\r\n        }\r\n    }\r\n    const onShowVotingResults = () => {\r\n        socket?.emit('showResults', { show: !resultsVisible });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const isUserAdmin = getIsAdmin();\r\n        setIsAdmin(isUserAdmin);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [roomState])\r\n\r\n    return (\r\n        <Wrapper>\r\n            { isAdmin && \r\n                <Flex column style={{ border: \"1px solid #f0d1d1\", borderRadius: '4px', padding: '8px' }}>\r\n                    <Flex column>\r\n                        <Title level={3}>Admin panel</Title>\r\n                        <Title level={4}>Add a presentation</Title>\r\n                        <Input \r\n                            value={presentationTitle} \r\n                            onChange={onChangePresentationTitle} \r\n                            placeholder=\"Insert new title here\"\r\n                        />\r\n                        <Button type=\"primary\" onClick={onNewPresentationAdd} style={{ margin: '12px 0' }}>Add</Button>\r\n                    </Flex>\r\n                    <Flex column style={{ margin: '12px 0'}}>\r\n                        <Title level={4}>Show voting results</Title>\r\n                        <Popconfirm\r\n                            title={`Are you ABSOLUTELY SURE you want to ${ resultsVisible ? 'hide' : 'show'} voting results?`}\r\n                            onConfirm={onShowVotingResults}\r\n                            onCancel={() => {}}\r\n                            okText=\"Do eet\"\r\n                            cancelText=\"Nope :c\"\r\n                            placement=\"left\"\r\n                        >\r\n                            <Button type=\"primary\" danger>{resultsVisible ? 'Hide' : \"Show\"}</Button>\r\n                        </Popconfirm>\r\n                    </Flex>\r\n                </Flex>\r\n            }\r\n            <Flex column style={{ margin: '12px 0'}}>\r\n                <Title level={3}>Leadership board</Title>\r\n                <Leaderboards />\r\n            </Flex>\r\n        </Wrapper>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useContext, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Confetti from \"react-confetti\";\r\nimport styled from 'styled-components';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport 'react-splitter-layout/lib/index.css';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport { AppContext } from '../../context/ContextProvider';\r\nimport Modal from 'antd/lib/modal';\r\nimport AddNickname from '../../components/AddNickname';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport default function Room() {\r\n    const { roomState, startConnection, nickname } = useContext(AppContext);\r\n    const { roomid } = useParams<{ roomid: string }>();\r\n    const [isVisible, setIsVisible] = useState<boolean>(false);\r\n    const [sidebarVisible, setSidebarVisible] = useState<boolean>(false);\r\n\r\n    const handleWindowSize = () => {\r\n        if (window.innerWidth < 1000)\r\n            setSidebarVisible(false);\r\n        else setSidebarVisible(true);\r\n    };\r\n\r\n    window.addEventListener('resize', handleWindowSize);\r\n\r\n    useEffect(() => { handleWindowSize() })\r\n    useEffect(() => {\r\n        if (roomid && nickname !== '' && !isVisible) {\r\n            startConnection(roomid)\r\n        }\r\n        if (nickname === '')\r\n            setIsVisible(true)\r\n\r\n    }, [roomid, nickname, isVisible])\r\n\r\n    return (\r\n        <Wrapper>\r\n            {roomState?.resultsVisible && <Confetti\r\n                gravity={0.05}\r\n                run={!!roomState?.resultsVisible}\r\n                numberOfPieces={400}\r\n                style={{ overflow: 'hidden', width: '100vw', height: '100vh' }}\r\n            />}\r\n            {\r\n                sidebarVisible\r\n                ? <SplitterLayout\r\n                        percentage\r\n                        primaryMinSize={70}\r\n                        secondaryInitialSize={20}\r\n                    >\r\n                        <Main />\r\n                        <Sidebar />\r\n                    </SplitterLayout>\r\n                : <Main />\r\n            }\r\n            <Modal visible={isVisible} cancelButtonProps={{ style: { visibility: 'hidden' } }}\r\n                onOk={() => setIsVisible(false)}\r\n            >\r\n                <AddNickname />\r\n            </Modal>\r\n        </Wrapper>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Room from './pages/Room';\r\nimport 'antd/dist/antd.css';\r\nimport AppContextProvider from './context/ContextProvider';\r\n\r\nexport default function App(): JSX.Element {\r\n\r\n  return (\r\n    <AppContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/room/:roomid\">\r\n            <Room />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </AppContextProvider>\r\n  )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}